{"cells":[{"metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","trusted":true},"cell_type":"code","source":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session","execution_count":null,"outputs":[]},{"metadata":{"_uuid":"d629ff2d2480ee46fbb7e2d37f6b5fab8052498a","collapsed":true,"_cell_guid":"79c7e3d0-c299-4dcb-8224-4455121ee9b0","trusted":false},"cell_type":"code","source":"def clean(floor, row, col):\n    m = 4\n    n = 4\n    no_of_tiles = m * n\n\n    tiles_checked = 0\n\n    # GO to starting pos in second row\n    while col != 0:\n        print_floor(floor, row, col)\n        print('---------------')\n        col -= 1\n\n    \n    while row != 1:\n        print_floor(floor, row, col)\n        print('---------------')\n        if row > 1:\n            row -= 1\n        else:\n            row += 1\n    \n    # Clean until 3 rows are cleaned \n    while tiles_checked < 3*4: # 3 rows\n        # Current position\n        print_floor(floor, row, col)\n\n        # Suck if dirty\n        if floor[row][col] == 1:\n            floor[row][col] = 0\n            print('Sucked the dirt')\n        else:\n            print('Already Clean')\n        \n    \n        # Next tile\n        if row % 2 == 0:\n            if 0 < col:\n                col -= 1\n            else:\n                row += 1        \n              \n        \n        else:\n            if col < m-1:\n                col += 1\n            else:\n                row += 1 \n            \n        \n        tiles_checked += 1\n        print('---------------')\n    \n    print('Cleaned!!!')\n        \n\n        \ndef print_floor(floor, row, col):\n    temp = floor[row][col]\n    floor[row][col] = 'VC'\n    for x in floor:\n        print(x)\n    \n    floor[row][col] = temp\n\n\n\nfloor = [[1, 0, 0, 0], # '1' represents dirty and '0' represents clean\n         [0, 1, 0, 1],\n         [1, 0, 1, 1],\n         [0, 0, 0, 1]]\n# Random Starting point\nrow, col = 2, 1\nclean(floor, row, col) ","execution_count":null,"outputs":[]}],"metadata":{"kernelspec":{"name":"python3","display_name":"Python 3","language":"python"},"language_info":{"name":"python","version":"3.7.6","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"}},"nbformat":4,"nbformat_minor":4}